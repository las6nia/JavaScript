// Hello!! thank you very much for joining my repository!! These are my notes throughout my Software Engineering
//Journey at UWGB!!

// New to Github as well!


//I rely on this website (https://www.w3schools.com/js/default.asp) for possible solutions and zybooks

//THIS COULD ALL GET CONFUSING TO READ SO PLEASE, FEEL FREE TO GET RID OF THE COMMENTS AT THE TOP
//WITH THE /* AND */ AT THE START OF THE CODE! THESE ARE MY LEARNING THROUGHOUT MY COMP SCI 201 - 
// Introduction to Computing & Internet Technologies, MAINLY JAVASCRIPT and will later post some of my projects using HTML, CSS, JS.
//To this day, I very much practice and will ocassionally go back to revise and practice/fix or find better solutions
//Even though these are very simple Js


/*
let student = ["Fox", "Alex", "Jenny", "Tom", "Max"];

student.shift(); //this will get rid of fox
student.shift(); //this will get rid of alex

student[0] = "Jessica"; //this will get rid of jenny, replace position 0 with Jessica

student.unshift("Rose");  //this will "undo" alex's position and replace with Rose
student.unshift("Molder"); //this will "undo" fox's position and replace with molder

console.log(student); //this will print the updated list of students after it's been modified
*/


/*GENERATED BY CHAT-GPT AS LEETCODE DOESN'T HAVE EASIER PROBLEMS :')
ðŸ§© Scenario: Grocery Delivery Queue
Youâ€™re managing a queue of grocery orders for a delivery driver. Here's what happens:

The first two orders in the queue were canceled.

One of the orders had the wrong item name â€” instead of "Banans", it should be "Bananas".

Two priority orders came in and must be delivered first, so you need to add them to the front of the queue.

One of the remaining orders should now include two items, so instead of "Milk", you want it to be ["Milk", "Eggs"].

ðŸŽ¯ Goal:
Fix the list to reflect these updates and print the final delivery queue.
*/

/* let orders = [] *come back */



/* position 
let student = ["Fox", "Alex", "Jenny", "Tom", "Max"];


let position = student.indexOf("Tom") + 1; //this will find "Tom" and 
let positionM = student.indexOf("Max") +1;

console.log("Tom is " + position +" and Max is " + positionM)
*/




/* sorting problem sorting

let solve_array =[100,-5,0,2000,2,7];
solve_array.sort();

console.log(solve_array)
*/


/* reverse in exam - list of values. call reverse. 

const fruits = ["Banana", "Orange", "Apple", "Mango"];
const fruits2 = ["Banana", "Orange", "Apple", "Mango"];

fruits.reverse()
fruits2.sort()

console.log(fruits)
console.log(fruits2)
*/



//printing student sort in final + study this code - control+f - You can use this code snippet to experiment with numerically and alphabetically sorting:

/*
let solve_array =[40,100,1,5,25,10];
console.log(solve_array)

// https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort2
*/



/*
const numbers1 = [45, 4, 9, 16, 25];
let numbers2 =  numbers1.map(multiplication);

function multiplication(value) {
    return value * 5;
  }


console.log(numbers2)
*/





/* array filter
// https://www.w3schools.com/jsref/jsref_filter.asp

const ages = [32, 33, 16, 40];
const result = ages.filter(checkAdult);

function checkAdult(age) {
  return age >= 18;
} 
*/


// get numbers greaters that 0 * fix  https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_map


/*
const numbers = [45, 4, 9, 16, 25];

function myFunction(total, value) {
  return total + value;
}
const result = numbers.reduce(myFunction);
console.log(result);
*/


/* math - https://www.w3schools.com/js/js_math.asp
console.log(Math.floor(9.10));
console.log(Math.ceil(9.10));
*/


//
/*let x = [9, 15, 0, 0, 7, -5];

console.log(Math.max(...x));
console.log(Math.min(...x)); 
*/
